;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #4=(headline (:standard-properties [24 24 41 694 694 0 #2=(:title) nil element t nil 43 692 1 nil nil nil #3=(org-data (:standard-properties [1 1 1 897 897 0 nil org-data nil t nil 3 897 nil nil nil nil nil] :path "/Users/w019540/.emacs.d/config.org" :CATEGORY "config"))] :pre-blank 1 :raw-value #1=[org-element-deferred org-element--headline-parse-title (t) t] :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] [nil [nil nil #10=(headline (:standard-properties [694 694 710 897 897 0 #2# nil element t nil 712 895 1 nil nil nil #3#] :pre-blank 1 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] #7=(headline (:standard-properties [442 442 459 694 694 0 #2# nil element t nil 461 692 2 nil nil nil #4#] :pre-blank 1 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 1] #5=(headline (:standard-properties [41 41 66 442 442 0 #2# section element t nil 68 440 2 nil nil nil #4#] :pre-blank 1 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[nil nil #3# 0] [nil nil #4# 0] (section (:standard-properties [1 1 1 24 24 0 nil first-section element t nil 1 24 nil nil nil nil #3#])) 0] [[nil nil #6=(section (:standard-properties [66 66 66 442 442 0 nil section element t nil 66 442 nil nil nil nil #5#])) 0] [nil nil (src-block (:standard-properties [259 259 nil nil 442 1 nil nil element t nil nil nil nil nil nil nil #6#] :language #9="emacs-lisp" :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(setq custom-file (expand-file-name\12                   (format \"custom-%d-%d.el\" (emacs-pid) (random))\12                   temporary-file-directory))\12")) 0] (paragraph (:standard-properties [66 66 66 258 259 1 nil planning element t nil nil nil nil nil nil nil #6#])) 0] #5# 0] [[[nil nil #8=(section (:standard-properties [459 459 459 694 694 0 nil section element t nil 459 694 nil nil nil nil #7#])) 0] [nil nil (src-block (:standard-properties [613 613 nil nil 694 1 nil nil element t nil nil nil nil nil nil nil #8#] :language #9# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(use-package no-littering\12  :ensure (:wait t))\12")) 0] (paragraph (:standard-properties [459 459 459 612 613 1 nil planning element t nil nil nil nil nil nil nil #8#])) 0] [nil [nil nil (src-block (:standard-properties [710 710 nil nil 897 0 nil planning element t nil nil nil nil nil nil nil #11=(section (:standard-properties [710 710 710 897 897 0 nil section element t nil 710 897 nil nil nil nil #10#]))] :language #9# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(add-hook 'after-init-hook\12          (lambda ()\12            (let ((inhibit-message t))\12              (message \"Emacs init time: %s\" (emacs-init-time)))))\12")) 0] #11# 1] #10# 0] #7# 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))